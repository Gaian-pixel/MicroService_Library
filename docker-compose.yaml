version: "3.7"
services:

  books-ms:
    build:
      context: ./book
      args:
        MVN_ARGS: -DskipTests=true
    container_name: book-ms
    ports:
      - "8102:8102"
    depends_on:
      - mongodb_db
      
  borrowing-ms:
    build:
      context: ./borrowing
      args:
        MVN_ARGS: -DskipTests=true
    container_name: borrowing-ms
    ports:
      - "8104:8104"
    depends_on:
      - mongodb_db
    
  customer-ms:
    build:
      context: ./customer
      args:
        MVN_ARGS: -DskipTests=true
    container_name: customer-ms
    ports:
      - "8103:8103"
    depends_on:
      - postgres_db
  
  notification-ms:
    build:
      context: ./notification
    container_name: notification-ms
    ports:
      - "8105:8105"
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"

  kafka:
    image: bitnami/kafka
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: "yes"
  
  mongodb_db:
    image: mongo:latest
    container_name: book-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: book_db
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      
  postgres_db:
    image: postgres:latest
    container_name: customer-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dbinit1.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      
      

volumes:
  mongodb_data: {}
  postgres_data: {}
